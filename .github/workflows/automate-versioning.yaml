name: Version Tagging

on:
  push:
    branches:
      - main

jobs:
  tag_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install commit-linter
        run: pip install commit-linter

      - name: Lint commits
        run: commit-linter --path .

      - name: Determine version update
        id: determine_version_update
        run: |
          commits=$(git log --pretty=oneline ${{ github.event.before }}..${{ github.sha }} | tail -n 10)
          echo "::set-output name=commit_messages::$commits"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --abbrev=0 --tags || echo "0.0.0")
          latest_tag=${latest_tag#v}
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Calculate version
        id: calculate_version
        run: |
          python3 - <<EOF
          import re
          from distutils.version import StrictVersion

          commits = '${{ steps.determine_version_update.outputs.commit_messages }}'.splitlines()
          major_count = 0
          minor_count = 0
          patch_count = 0

          for commit in commits:
              if re.search(r'\bfeat\b', commit):
                  minor_count += 1
              elif re.search(r'\bfix\b', commit):
                  patch_count += 1
              else:
                  patch_count += 1

          latest_tag = '${{ steps.get_latest_tag.outputs.latest_tag }}'
          version = StrictVersion(latest_tag)

          if major_count > 0:
              version = version.bump_major()
          elif minor_count > 0:
              version = version.bump_minor()
          elif patch_count > 0:
              version = version.bump_patch()

          print(version)
          print('::set-output name=version::{}'.format(version))
          EOF

      - name: Create version tag
        run: git tag ${{ steps.calculate_version.outputs.version }}

      - name: Push version tag
        run: git push origin ${{ steps.calculate_version.outputs.version }}
